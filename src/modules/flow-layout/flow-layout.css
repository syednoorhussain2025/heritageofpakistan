/* Design tokens */
:root {
  /* Standard side image width for L/R layouts (desktop/tablet).
     Tune once; engine will also use this via designTokens.widthPx. */
  --side-img-w: clamp(360px, 35vw, 520px);
  --section-gutter: 1.25rem;
}

/* Base article container */
.hop-article {
  max-width: 72ch;
  margin: 0 auto;
  padding: 0 1rem;
}

/* Generic section grid â€“ specific sections add their own grid via classes */
.hop-section {
  display: grid;
  margin: 1.5rem 0;
}

/* Text defaults */
.hop-text {
  font-family: var(--font-article, ui-serif);
  font-size: 16px;
  line-height: 1.7;
}
.hop-text .hop-p + .hop-p {
  margin-top: 0.85rem;
}

/* Media defaults */
.hop-media img {
  display: block;
  width: 100%;
  height: auto;
  border-radius: 10px;
}
.hop-media-placeholder {
  border: 1px dashed #c9c9c9;
  padding: 12px;
  border-radius: 10px;
  text-align: center;
  color: #777;
}
.hop-caption {
  font-size: 0.85rem;
  color: #666;
  margin-top: 0.35rem;
}

/* â”€â”€â”€â”€â”€â”€â”€â”€â”€ NEW: utilities for default section primitives â”€â”€â”€â”€â”€â”€â”€â”€â”€ */

.flx--two-col {
  display: grid;
  grid-template-columns: auto 1fr; /* image column is sized by its contents */
  gap: var(--section-gutter);
  align-items: start;
}

.flx-img {
  width: var(--side-img-w);
  overflow: hidden;
  border-radius: 8px;
  background: #f4f4f5;
}

/* The text container may receive data-text-lock="image" with an inline min-height */
.flx-text[data-text-lock="image"] {
  /* min-height comes inline from the snapshot; nothing else needed here */
}

/* Mobile behavior: stack columns and release the min-height lock */
@media (max-width: 1024px) {
  .flx--two-col {
    display: block;
  }
  .flx-img {
    width: 100%;
  }
  [data-text-lock="image"] {
    min-height: 0 !important;
  }
}

/* â”€â”€â”€â”€â”€â”€â”€â”€â”€ Section-specific classes matching presets (kept) â”€â”€â”€â”€â”€â”€â”€â”€â”€ */

/* heroIntro */
.sec-heroIntro {
  grid-template-columns: 1fr;
  grid-template-areas: "media" "text";
  gap: 1.25rem;
}
.sec-heroIntro .area-media {
  grid-area: media;
}
.sec-heroIntro .area-text {
  grid-area: text;
}

/* mediaLeftTextRight
   Note: our default primitives use .flx--two-col with token width; these classes are kept for compatibility. */
.sec-mediaLeftTextRight {
  grid-template-columns: 40% 1fr;
  grid-template-areas: "media text";
  gap: 1.25rem;
}
@media (max-width: 900px) {
  .sec-mediaLeftTextRight {
    grid-template-columns: 1fr;
    grid-template-areas: "media" "text";
  }
}
.sec-mediaLeftTextRight .area-media {
  grid-area: media;
}
.sec-mediaLeftTextRight .area-text {
  grid-area: text;
}

/* fullTextBand */
.sec-fullTextBand {
  grid-template-columns: 1fr;
  grid-template-areas: "text";
}

/* â”€â”€â”€â”€â”€â”€â”€â”€â”€ Measurement signatures (used by Measurer) â”€â”€â”€â”€â”€â”€â”€â”€â”€
   These must mirror actual slot widths & typography and **must not contain ':'**.
*/
.hop-measure-base {
  font-family: var(--font-article, ui-serif);
  font-size: 16px;
  line-height: 1.7;
  padding: 0 16px;
  width: 640px;
}

/* Example signatures for desktop (used in presets) */
.sig-heroIntro__media__desktop {
  width: 960px;
}
.sig-heroIntro__intro__desktop {
  width: 960px;
}
.sig-mediaLeftTextRight__media__desktop {
  width: 480px;
} /* align with --side-img-w default */
.sig-mediaLeftTextRight__text__desktop {
  width: 680px;
}
.sig-fullTextBand__text__desktop {
  width: 960px;
}

/* Tablet/mobile signatures (approximate; refine as needed) */
@media (max-width: 900px) {
  .sig-heroIntro__media__tablet,
  .sig-heroIntro__intro__tablet,
  .sig-mediaLeftTextRight__media__tablet,
  .sig-mediaLeftTextRight__text__tablet,
  .sig-fullTextBand__text__tablet {
    width: 680px;
  }
}
@media (max-width: 640px) {
  .sig-heroIntro__media__mobile,
  .sig-heroIntro__intro__mobile,
  .sig-mediaLeftTextRight__media__mobile,
  .sig-mediaLeftTextRight__text__mobile,
  .sig-fullTextBand__text__mobile {
    width: 360px;
  }
}

/* Utility classes binding areas (FlowRenderer may apply these) */
.area-media {
}
.area-text {
}

/* â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ */
/* ðŸ§¼ Text selection normalization for PUBLIC articles            */
/* Ensures editor leftovers (select-none, inline user-select)     */
/* don't force whole-block selection on the published page.       */
/* â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ */

.hop-article,
.hop-article * {
  -webkit-user-select: text;
  user-select: text;
}

/* Explicitly override common blockers from editor output */
.hop-article .select-none,
.hop-article [contenteditable],
.hop-article [draggable],
.hop-article [style*="user-select"] {
  -webkit-user-select: text !important;
  user-select: text !important;
}
